import{animations}from"./data.js";!function(){new class{constructor(e){this.eases={linear:function(e){return e},easeInCubic:function(e){return e*e*e},easeOutCubic:function(e){return--e*e*e+1},easeInOutCubic:function(e){return e<.5?4*e*e*e:(e-1)*(2*e-2)*(2*e-2)+1}},this.properties=e.properties,this.element=e.element,this.ease=e.ease,this.duration=e.duration}lerp(e,t,i){return(1-i)*e+i*t}start(){this.frame=0;for(const e of Object.keys(this.properties)){const t=this.properties[e];this.element.setAttribute("style",`${e}: ${t.values[0]}`)}window.requestAnimationFrame(this.frameRender.bind(this))}frameRender(){if(this.frame++,this.frame>60*this.duration)return console.log("Animation finished"),window.cancelAnimationFrame(this.frameRender.bind(this));for(const e in this.properties){const t=this.properties[e];let i=this.frame/(60*this.duration);this.element.setAttribute("style",`${e}: ${this.lerp(t.values[0],t.values[1],this.eases[this.ease](i/this.duration)*this.duration)}${t.type}`)}window.requestAnimationFrame(this.frameRender.bind(this))}}(animations["initial-header"]).start()}();